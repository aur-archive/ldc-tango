diff -r d268bf419a09 gen/tollvm.cpp
--- a/gen/tollvm.cpp	Sat Nov 22 21:11:26 2008 +0100
+++ b/gen/tollvm.cpp	Sun Nov 23 14:21:32 2008 +0100
@@ -409,11 +409,9 @@ void DtoMemSetZero(LLValue* dst, LLValue
 {
     dst = DtoBitCast(dst,getVoidPtrType());
 
-    llvm::Function* fn;
-    if (global.params.is64bit)
-        fn = GET_INTRINSIC_DECL(memset_i64);
-    else
-        fn = GET_INTRINSIC_DECL(memset_i32);
+    const LLType* intTy = DtoSize_t();
+    llvm::Function* fn = llvm::Intrinsic::getDeclaration(gIR->module,
+        llvm::Intrinsic::memset, &intTy, 1);
 
     gIR->ir->CreateCall4(fn, dst, DtoConstUbyte(0), nbytes, DtoConstUint(0), "");
 }
@@ -425,11 +423,9 @@ void DtoMemCpy(LLValue* dst, LLValue* sr
     dst = DtoBitCast(dst,getVoidPtrType());
     src = DtoBitCast(src,getVoidPtrType());
 
-    llvm::Function* fn;
-    if (global.params.is64bit)
-        fn = GET_INTRINSIC_DECL(memcpy_i64);
-    else
-        fn = GET_INTRINSIC_DECL(memcpy_i32);
+    const LLType* intTy = DtoSize_t();
+    llvm::Function* fn = llvm::Intrinsic::getDeclaration(gIR->module,
+        llvm::Intrinsic::memcpy, &intTy, 1);
 
     gIR->ir->CreateCall4(fn, dst, src, nbytes, DtoConstUint(0), "");
 }
diff -r d268bf419a09 gen/toobj.cpp
--- a/gen/toobj.cpp	Sat Nov 22 21:11:26 2008 +0100
+++ b/gen/toobj.cpp	Sun Nov 23 14:21:32 2008 +0100
@@ -262,7 +262,7 @@ void Module::genobjfile(int multiobj, ch
         Logger::println("Writing native asm to: %s\n", spath.c_str());
         std::string err;
         {
-            llvm::raw_fd_ostream out(spath.c_str(), err);
+            llvm::raw_fd_ostream out(spath.c_str(), false, err);
             write_asm_to_file(Target, *ir.module, out);
         }
 
